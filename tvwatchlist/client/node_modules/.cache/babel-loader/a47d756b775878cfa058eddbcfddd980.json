{"ast":null,"code":"var _jsxFileName = \"/Users/dijah/Desktop/tvWatchApp/tvwatchlist/client/src/Components/Profile.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './CSS/Profile.css';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserShows = async () => {\n      const userId = this.props.match.params.id;\n      let userURL = `http://localhost:3010/shows/user/${userId}`;\n      let res = await axios.get(userURL); // console.log(res.data.payload)\n\n      this.setState({\n        shows: res.data.payload\n      });\n    };\n\n    this.state = {\n      loggedInUser: this.props.match.params.id,\n      // users: this.props,\n      userId: \"\",\n      shows: [],\n      id: 0,\n      imgFile: null,\n      imgURL: \"\",\n      title: \"\",\n      genre: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getUserShows();\n  }\n\n  render() {\n    const {\n      shows\n    } = this.state;\n\n    for (const el of shows) {\n      console.log(el);\n      let name = el.username;\n      let profile = el.avatar_url;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userShow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, name), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"userImage\",\n        src: profile,\n        alt: \"profile\",\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"shows\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, shows.map(show => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"show\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: \"showTitle\",\n          to: \"/shows\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 83\n          }\n        }, show.title)), /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"showGenre\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 41\n          }\n        }, show.genre_name), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"showCover\",\n          key: show.id,\n          src: show.img_url,\n          alt: show.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }\n        }));\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \");\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/dijah/Desktop/tvWatchApp/tvwatchlist/client/src/Components/Profile.jsx"],"names":["React","axios","Link","Profile","Component","constructor","props","getUserShows","userId","match","params","id","userURL","res","get","setState","shows","data","payload","state","loggedInUser","imgFile","imgURL","title","genre","componentDidMount","render","el","console","log","name","username","profile","avatar_url","map","show","genre_name","img_url"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport './CSS/Profile.css'\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loggedInUser: this.props.match.params.id,\n            // users: this.props,\n            userId: \"\",\n            shows: [],\n            id: 0,\n            imgFile: null,\n            imgURL: \"\",\n            title: \"\",\n            genre: \"\"\n        }\n    }\n    componentDidMount() {\n        this.getUserShows()\n    }\n\n    getUserShows = async () => {\n        const userId = this.props.match.params.id\n        let userURL = `http://localhost:3010/shows/user/${userId}`\n        let res = await axios.get(userURL)\n        // console.log(res.data.payload)\n        this.setState({\n            shows: res.data.payload\n        })\n    }\n\n    render() {\n        const { shows } = this.state\n        for (const el of shows) {\n            console.log(el)\n            let name = el.username\n            let profile = el.avatar_url\n            return (\n                <div className=\"userShow\">\n                    <div className=\"user\">\n                        <h1>{name}</h1>\n                        <img className=\"userImage\" src={profile} alt=\"profile\" key={name} />\n                    </div>\n                    <div className=\"shows\">\n                        {shows.map(show => {\n                            return (\n                                    <div className=\"show\">\n                                        <Link className=\"showTitle\" to={\"/shows\"}><h3>{show.title}</h3></Link>\n                                        <h4 className=\"showGenre\">{show.genre_name}</h4>\n                                        <img className=\"showCover\" key={show.id} src={show.img_url} alt={show.id} />\n                                    </div>\n                            )\n                        })}\n                    </div>\n\n                </div>\n            )\n        }\n        return (<> </>)\n    }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}